<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="order" value="1" />
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>


    <bean id="cookieSerializer" class="org.springframework.session.web.http.DefaultCookieSerializer">
        <property name="cookiePath" value="/"></property>
    </bean>


    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <!--最大连接数 -->
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <!--最大空闲连接数 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024"/>
        <!--释放连接的扫描间隔(单位:毫秒) -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!--连接最小空闲时间(单位:毫秒) -->
        <property name="minEvictableIdleTimeMillis" value="100000"/>
        <!--连接空闲多久后释放,当空闲时间大于该值并且空闲连接大于最大空闲连接时直接释放连接 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000"/>
        <!--获取连接时最大等待毫秒数,如果该值小于0,则阻塞不确定的时长,默认值-1 -->
        <property name="maxWaitMillis" value="1500"/>
        <!--在获取连接时检查连接有效性,默认为false -->
        <property name="testOnBorrow" value="false"/>
        <!--在连接空闲时检查连接有效性,默认为false -->
        <property name="testWhileIdle" value="true"/>
        <!--连接耗尽是否阻塞,false代表抛异常,true代表阻塞直到超时,默认为true -->
        <property name="blockWhenExhausted" value="false"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.host}" />
        <constructor-arg index="2" value="${redis.port}" type="int" />
        <constructor-arg index="3" value="${redis.timeout}" type="int" />
    </bean>


    <!-- redis连接配置，依次为主机ip，端口，是否使用池，(usePool=true时)redis的池配置 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}"
          p:password="${redis.auth}"
          p:port="${redis.port}"
          p:database="${redis.session.database}"
          p:pool-config-ref="jedisPoolConfig">
    </bean>

    <!-- 配置spring-session -->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!-- 过期时间30分钟 -->
        <property name="maxInactiveIntervalInSeconds" value="1800"></property>
    </bean>
</beans>